{% extends 'PubBase.html.twig' %}

{% block title %}Edit Activity{% endblock %}

{# Check if there's a success message from the controller and create a variable to use in JavaScript #}
{% set success_message = false %}
{% for message in app.flashes('success') %}
    {% set success_message = message %}
{% endfor %}

{% block body %}
<!-- Success message handling with SweetAlert -->
{% if app.request.query.get('success') == 'update' %}
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            Swal.fire({
                title: 'Success!',
                text: 'The activity has been updated successfully.',
                icon: 'success',
                confirmButtonText: 'OK',
                confirmButtonColor: '#3554D1'
            }).then(() => {
                // Clean up the URL by removing the success parameter
                const url = new URL(window.location.href);
                url.searchParams.delete('success');
                window.history.replaceState({}, '', url);
            });
        });
    </script>
{% endif %}

<div class="row y-gap-20 justify-between items-end pb-30 lg:pb-20 md:pb-16">
    <div class="col-auto">
        <div class="d-flex items-center mb-10">
            <div class="icon-circle bg-blue-1-05 text-blue-1 size-60 rounded-full flex-center mr-15">
                <i class="icon-route text-24"></i>
            </div>
            <div>
                <h1 class="text-30 lh-14 fw-600">Edit Activity</h1>
                <div class="text-15 text-light-1 mt-5">Update information for "{{ activity.activityName }}"</div>
            </div>
        </div>
    </div>
    <div class="col-auto">
        <a href="{{ path('app_publicator_activities') }}" class="button h-50 px-24 -blue-1 bg-blue-1-05 text-blue-1 rounded-8 hover-shadow-blue">
            <i class="icon-arrow-left mr-10"></i>
            Back to Activities
        </a>
    </div>
</div>

{# Only show error messages as flash messages #}
{% for label, messages in app.flashes %}
    {% if label != 'success' %}
        {% for message in messages %}
            <div class="alert alert-danger mb-30 fade-in">
                <div class="px-20 py-20 bg-red-1 text-white rounded-8">
                    <div class="row x-gap-10 y-gap-10 items-center">
                        <div class="col-auto">
                            <div class="d-flex items-center">
                                <i class="icon-close text-20 mr-10"></i>
                                <div class="fw-500">{{ message }}</div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        {% endfor %}
    {% endif %}
{% endfor %}

<div class="py-40 px-40 rounded-12 bg-white shadow-3 fade-in" style="border: 1px solid rgba(230, 230, 230, 0.7);">
    <!-- Progress Steps -->
    <div class="row justify-center mb-20">
        <div class="col-12">
            <div class="progress-wrapper">
                <div class="progress-item active">
                    <div class="progress-circle">
                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" viewBox="0 0 16 16">
                            <path d="M8.354 1.146a.5.5 0 0 0-.708 0l-6 6A.5.5 0 0 0 1.5 7.5v7a.5.5 0 0 0 .5.5h4.5a.5.5 0 0 0 .5-.5v-4h2v4a.5.5 0 0 0 .5.5H14a.5.5 0 0 0 .5-.5v-7a.5.5 0 0 0-.146-.354L13 5.793V2.5a.5.5 0 0 0-.5-.5h-1a.5.5 0 0 0-.5.5v1.293L8.354 1.146ZM2.5 14V7.707l5.5-5.5 5.5 5.5V14H10v-4a.5.5 0 0 0-.5-.5h-3a.5.5 0 0 0-.5.5v4H2.5Z"/>
                        </svg>
                    </div>
                    <div class="progress-text">Basic Info</div>
                </div>
                <div class="progress-line active"></div>
                <div class="progress-item active">
                    <div class="progress-circle">
                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" viewBox="0 0 16 16">
                            <path d="M3.5 0a.5.5 0 0 1 .5.5V1h8V.5a.5.5 0 0 1 1 0V1h1a2 2 0 0 1 2 2v11a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V3a2 2 0 0 1 2-2h1V.5a.5.5 0 0 1 .5-.5zM1 4v10a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1V4H1z"/>
                        </svg>
                    </div>
                    <div class="progress-text">Details</div>
                </div>
                <div class="progress-line active"></div>
                <div class="progress-item active">
                    <div class="progress-circle">
                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" viewBox="0 0 16 16">
                            <path d="M6.002 5.5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0z"/>
                            <path d="M2.002 1a2 2 0 0 0-2 2v10a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V3a2 2 0 0 0-2-2h-12zm12 1a1 1 0 0 1 1 1v6.5l-3.777-1.947a.5.5 0 0 0-.577.093l-3.71 3.71-2.66-1.772a.5.5 0 0 0-.63.062L1.002 12V3a1 1 0 0 1 1-1h12z"/>
                        </svg>
                    </div>
                    <div class="progress-text">Images</div>
                </div>
            </div>
        </div>
    </div>
    
    <!-- Form Intro -->
    <div class="row mb-20">
        <div class="col-12">
            <div class="bg-blue-1-05 rounded-8 py-15 px-20 mb-20">
                <div class="row">
                    <div class="col-auto">
                        <div class="d-flex items-center">
                            <div class="size-40 flex-center bg-blue-1 rounded-full">
                                <div class="icon-check text-14 text-white"></div>
                            </div>
                        </div>
                    </div>
                    <div class="col">
                        <h4 class="text-18 fw-500 mb-5">Update Activity Information</h4>
                        <p class="text-15 lh-16">Update the details for "{{ activity.activityName }}". All fields marked with an asterisk (*) are required.</p>
                    </div>
                </div>
            </div>
        </div>
    </div>
    
    {{ form_start(form, {'attr': {'id': 'activity-form', 'class': 'row y-gap-20', 'enctype': 'multipart/form-data'}}) }}
    {% do form.activity_price.setRendered %}
    
    <!-- Basic Information Section -->
    <div class="row y-gap-20 mb-30">
        <div class="col-12">
            <div class="py-30 px-30 rounded-12 bg-white shadow-3 border-light fade-in">
                <div class="row">
                    <div class="col-12 mb-20">
                        <div class="d-flex">
                            <div class="size-50 flex-center bg-blue-1 rounded-full mr-15 text-white">
                                <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="white" viewBox="0 0 16 16">
                                    <path d="M8.354 1.146a.5.5 0 0 0-.708 0l-6 6A.5.5 0 0 0 1.5 7.5v7a.5.5 0 0 0 .5.5h4.5a.5.5 0 0 0 .5-.5v-4h2v4a.5.5 0 0 0 .5.5H14a.5.5 0 0 0 .5-.5v-7a.5.5 0 0 0-.146-.354L13 5.793V2.5a.5.5 0 0 0-.5-.5h-1a.5.5 0 0 0-.5.5v1.293L8.354 1.146ZM2.5 14V7.707l5.5-5.5 5.5 5.5V14H10v-4a.5.5 0 0 0-.5-.5h-3a.5.5 0 0 0-.5.5v4H2.5Z"/>
                                </svg>
                            </div>
                            <div>
                                <h3 class="text-18 fw-600">Basic Information</h3>
                                <p class="text-14 text-light-1 mt-5">Enter activity name, description and category</p>
                            </div>
                        </div>
                        <div class="mt-15">
                            <div class="border-top-light"></div>
                        </div>
                    </div>
                </div>
                
                <!-- Form fields -->
                <div class="row x-gap-20 y-gap-20">
                    <div class="col-md-6">
                        <div class="form-group">
                            <label class="text-16 lh-1 fw-500 text-dark-1 mb-10">Activity Name <span class="text-danger">*</span></label>
                            <div class="input-group">
                                <div class="input-icon-wrap">
                                    <i class="icon-destination text-16 text-light-1"></i>
                                </div>
                                {{ form_widget(form.activity_name, {'attr': {'class': 'form-control rounded-8 px-20 py-15 border-light input-border-focus pl-45', 'placeholder': 'Enter activity name'}}) }}
                            </div>
                            <div class="text-red-1 mt-5">{{ form_errors(form.activity_name) }}</div>
                        </div>
                    </div>

                    <div class="col-md-6">
                        <div class="form-group">
                            <label class="text-16 lh-1 fw-500 text-dark-1 mb-10">Destination <span class="text-danger">*</span></label>
                            <div class="input-group">
                                <div class="input-icon-wrap">
                                    <i class="icon-pin text-16 text-light-1"></i>
                                </div>
                                {{ form_widget(form.activity_destination, {'attr': {'class': 'form-select rounded-8 px-20 py-15 border-light input-border-focus pl-45'}}) }}
                            </div>
                            <div class="text-red-1 mt-5">{{ form_errors(form.activity_destination) }}</div>
                        </div>
                    </div>

                    <div class="col-md-6">
                        <div class="form-group">
                            <label class="text-16 lh-1 fw-500 text-dark-1 mb-10">Genre <span class="text-danger">*</span></label>
                            <div class="input-group">
                                <div class="input-icon-wrap">
                                    <i class="icon-category text-16 text-light-1"></i>
                                </div>
                                {{ form_widget(form.activity_genre, {'attr': {'class': 'form-select rounded-8 px-20 py-15 border-light input-border-focus pl-45'}}) }}
                            </div>
                            <div class="text-red-1 mt-5">{{ form_errors(form.activity_genre) }}</div>
                        </div>
                    </div>
                    
                    <div class="col-12">
                        <div class="form-group">
                            <label class="text-16 lh-1 fw-500 text-dark-1 mb-10">Description <span class="text-danger">*</span></label>
                            <div class="input-group">
                                <div class="input-icon-wrap position-absolute" style="top: 15px;">
                                    <i class="icon-message text-16 text-light-1"></i>
                                </div>
                                {{ form_widget(form.activity_description, {'attr': {'class': 'form-control rounded-8 px-20 py-15 border-light input-border-focus pl-45', 'placeholder': 'Enter detailed description of your activity', 'rows': '4', 'style': 'min-height: 120px;'}}) }}
                            </div>
                            <div class="text-red-1 mt-5">{{ form_errors(form.activity_description) }}</div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Activity Details Section -->
    <div class="row y-gap-20 mb-30">
        <div class="col-12">
            <div class="py-30 px-30 rounded-12 bg-white shadow-3 border-light fade-in">
                <div class="row">
                    <div class="col-12 mb-20">
                        <div class="d-flex">
                            <div class="size-50 flex-center bg-green-1 rounded-full mr-15 text-white">
                                <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="#333333" viewBox="0 0 16 16">
                                    <path d="M3.5 0a.5.5 0 0 1 .5.5V1h8V.5a.5.5 0 0 1 1 0V1h1a2 2 0 0 1 2 2v11a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V3a2 2 0 0 1 2-2h1V.5a.5.5 0 0 1 .5-.5zM1 4v10a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1V4H1z"/>
                                </svg>
                            </div>
                            <div>
                                <h3 class="text-18 fw-600">Activity Details</h3>
                                <p class="text-14 text-light-1 mt-5">Define timing, duration and capacity details</p>
                            </div>
                        </div>
                        <div class="mt-15">
                            <div class="border-top-light"></div>
                        </div>
                    </div>
                </div>
                
                <!-- Timing and participant details -->
                <div class="row x-gap-20 y-gap-20">
                    <div class="col-md-6">
                        <div class="form-group">
                            <label class="text-16 lh-1 fw-500 text-dark-1 mb-10">Activity Date</label>
                            <div class="input-group">
                                <div class="input-icon-wrap">
                                    <i class="icon-calendar text-16 text-light-1"></i>
                                </div>
                                {{ form_widget(form.activity_date, {'attr': {'class': 'form-control rounded-8 px-20 py-15 border-light input-border-focus pl-45', 'type': 'date'}}) }}
                            </div>
                            <div class="text-red-1 mt-5">{{ form_errors(form.activity_date) }}</div>
                        </div>
                    </div>

                    <div class="col-md-6">
                        <div class="form-group">
                            <label class="text-16 lh-1 fw-500 text-dark-1 mb-10">Maximum Participants <span class="text-danger">*</span></label>
                            <div class="input-group">
                                <div class="input-icon-wrap">
                                    <i class="icon-user text-16 text-light-1"></i>
                                </div>
                                {{ form_widget(form.max_number, {'attr': {'class': 'form-control rounded-8 px-20 py-15 border-light input-border-focus pl-45', 'type': 'number', 'min': '1'}}) }}
                            </div>
                            <div class="text-red-1 mt-5">{{ form_errors(form.max_number) }}</div>
                            <small class="text-light-1 mt-5 d-block">Maximum number of participants allowed</small>
                        </div>
                    </div>

                    <div class="col-md-6">
                        <div class="form-group">
                            <label class="text-16 lh-1 fw-500 text-dark-1 mb-10">Duration <span class="text-danger">*</span></label>
                            <div class="input-group">
                                <div class="input-icon-wrap">
                                    <i class="icon-clock text-16 text-light-1"></i>
                                </div>
                                {{ form_widget(form.activity_duration, {'attr': {'class': 'form-control rounded-8 px-20 py-15 border-light input-border-focus pl-45', 'placeholder': 'e.g. 2 hours'}}) }}
                            </div>
                            <div class="text-red-1 mt-5">{{ form_errors(form.activity_duration) }}</div>
                        </div>
                    </div>

                    <div class="col-md-6">
                        <div class="form-group">
                            <label class="text-16 lh-1 fw-500 text-dark-1 mb-10">Price <span class="text-danger">*</span></label>
                            <div class="input-group">
                                <div class="input-icon-wrap">
                                    <i class="icon-dollar text-16 text-light-1"></i>
                                </div>
                                <input type="text" id="activity_form_activity_price" name="activity_form[activity_price]" required="required" value="{{ form.activity_price.vars.value }}" class="form-control rounded-8 px-20 py-15 border-light input-border-focus pl-45" placeholder="e.g. 99.99">
                            </div>
                            <div class="text-red-1 mt-5">{{ form_errors(form.activity_price) }}</div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Location Section -->
    <div class="row y-gap-20 mb-30">
        <div class="col-12">
            <div class="py-30 px-30 rounded-12 bg-white shadow-3 border-light fade-in">
                <div class="row">
                    <div class="col-12 mb-20">
                        <div class="d-flex">
                            <div class="size-50 flex-center bg-yellow-4 rounded-full mr-15 text-dark-1">
                                <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="#333333" viewBox="0 0 16 16">
                                    <path d="M8 16s6-5.686 6-10A6 6 0 0 0 2 6c0 4.314 6 10 6 10zm0-7a3 3 0 1 1 0-6 3 3 0 0 1 0 6z"/>
                                </svg>
                            </div>
                            <div>
                                <h3 class="text-18 fw-600">Activity Location</h3>
                                <p class="text-14 text-light-1 mt-5">Set the exact coordinates for your activity</p>
                            </div>
                        </div>
                        <div class="mt-15">
                            <div class="border-top-light"></div>
                        </div>
                    </div>
                </div>
                
                <!-- Coordinates -->
                <div class="row x-gap-20 y-gap-20">
                    <div class="col-md-6">
                        <div class="form-group">
                            <label class="text-16 lh-1 fw-500 text-dark-1 mb-10">Latitude <span class="text-danger">*</span></label>
                            <div class="input-group">
                                <div class="input-icon-wrap">
                                    <i class="icon-map-pin text-16 text-light-1"></i>
                                </div>
                                {{ form_widget(form.latitude, {'attr': {'class': 'form-control rounded-8 px-20 py-15 border-light input-border-focus pl-45', 'placeholder': 'e.g. 36.7128', 'id': 'activity_lat'}}) }}
                            </div>
                            <div class="text-red-1 mt-5">{{ form_errors(form.latitude) }}</div>
                            <small class="text-light-1">Must be between -90 and 90</small>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <label class="text-16 lh-1 fw-500 text-dark-1 mb-10">Longitude <span class="text-danger">*</span></label>
                            <div class="input-group">
                                <div class="input-icon-wrap">
                                    <i class="icon-map-pin text-16 text-light-1"></i>
                                </div>
                                {{ form_widget(form.longitude, {'attr': {'class': 'form-control rounded-8 px-20 py-15 border-light input-border-focus pl-45', 'placeholder': 'e.g. -122.4194', 'id': 'activity_lng'}}) }}
                            </div>
                            <div class="text-red-1 mt-5">{{ form_errors(form.longitude) }}</div>
                            <small class="text-light-1">Must be between -180 and 180</small>
                        </div>
                    </div>
                    
                    <div class="col-12 mt-10">
                        <div class="bg-blue-1-05 rounded-8 px-20 py-15">
                            <div class="d-flex">
                                <i class="icon-info-circle text-20 me-10 mt-5"></i>
                                <div>
                                    <p class="mb-5 fw-500">How to find coordinates:</p>
                                    <ol class="mb-0 ps-20">
                                        <li>Open Google Maps in your browser</li>
                                        <li>Find the exact location for your activity</li>
                                        <li>Right-click on the map and select "What's here?"</li>
                                        <li>The coordinates will appear at the bottom of the screen</li>
                                        <li>Copy and paste the latitude and longitude values here</li>
                                    </ol>
                                </div>
                            </div>
                        </div>
                    </div>
                    
                    <!-- Map Preview -->
                    <div class="col-12 mt-20">
                        <div id="map-preview" class="rounded-8 border-light overflow-hidden" style="height: 250px; display: none;"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Images Section -->
    <div class="row y-gap-20 mb-30">
        <div class="col-12">
            <div class="py-30 px-30 rounded-12 bg-white shadow-3 border-light fade-in">
                <div class="row">
                    <div class="col-12 mb-20">
                        <div class="d-flex">
                            <div class="size-50 flex-center bg-purple-1 rounded-full mr-15 text-white">
                                <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="white" viewBox="0 0 16 16">
                                    <path d="M6.002 5.5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0z"/>
                                    <path d="M2.002 1a2 2 0 0 0-2 2v10a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V3a2 2 0 0 0-2-2h-12zm12 1a1 1 0 0 1 1 1v6.5l-3.777-1.947a.5.5 0 0 0-.577.093l-3.71 3.71-2.66-1.772a.5.5 0 0 0-.63.062L1.002 12V3a1 1 0 0 1 1-1h12z"/>
                                </svg>
                            </div>
                            <div>
                                <h3 class="text-18 fw-600">Activity Images</h3>
                                <p class="text-14 text-light-1 mt-5">Upload high-quality images of your activity</p>
                            </div>
                        </div>
                        <div class="mt-15">
                            <div class="border-top-light"></div>
                        </div>
                    </div>
                </div>
                
                <!-- Current Images -->
                <div class="row x-gap-20 y-gap-20">
                    <div class="col-12">
                        <label class="text-16 lh-1 fw-500 text-dark-1 mb-10">Current Images</label>
                        
                        {% if resources is empty %}
                            <div class="py-15 px-20 rounded-8 text-center bg-light-2 border-light">
                                <div class="text-14 text-light-1">No images available for this activity</div>
                            </div>
                        {% else %}
                            <div class="row g-20 mt-15">
                                {% for resource in resources %}
                                    <div class="col-lg-3 col-md-4 col-sm-6">
                                        <div class="border rounded-8 p-15 h-100 d-flex flex-column shadow-sm hover-shadow-blue position-relative">
                                            <img src="{{ resource.path }}" class="w-100 rounded-4" style="height: 180px; object-fit: cover;">
                                            <div class="text-14 mt-15 fw-500 text-truncate">Image #{{ loop.index }}</div>
                                            <div class="text-12 text-light-1 mb-15">Activity Image</div>
                                            <div class="d-flex justify-between mt-auto">
                                                <div class="form-check">
                                                    <input type="checkbox" id="delete_{{ resource.id }}" name="deleted_images[]" value="{{ resource.id }}" class="delete-image-check form-check-input rounded-4">
                                                    <label for="delete_{{ resource.id }}" class="text-14 cursor-pointer form-check-label">Mark for Deletion</label>
                                                </div>
                                            </div>
                                            <div class="deletion-indicator bg-red-1 rounded-8 text-white text-center p-5 text-12 fw-500 mt-10" style="display: none;">Will be deleted</div>
                                        </div>
                                    </div>
                                {% endfor %}
                            </div>
                        {% endif %}
                    </div>
                </div>

                <!-- Add New Images -->
                <div class="col-12 mt-30">
                    <div class="file-upload-container mb-15">
                        <label class="text-16 lh-1 fw-500 text-dark-1 mb-10">Upload New Images</label>

                        <div class="px-20 py-20 rounded-8 border-light bg-white position-relative">
                            <div class="row y-gap-20">
                                <div class="col-12">
                                    {{ form_widget(form.activity_images, {'attr': {'class': 'visually-hidden', 'id': 'activity_images', 'multiple': 'multiple'}}) }}

                                    <label for="activity_images" class="button -md h-60 bg-blue-1 text-white rounded-8 w-100">
                                        <div class="d-flex items-center justify-center h-100">
                                            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="white" class="mr-10" viewBox="0 0 16 16">
                                                <path d="M.5 9.9a.5.5 0 0 1 .5.5v2.5a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1v-2.5a.5.5 0 0 1 1 0v2.5a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2v-2.5a.5.5 0 0 1 .5-.5z"/>
                                                <path d="M7.646 1.146a.5.5 0 0 1 .708 0l3 3a.5.5 0 0 1-.708.708L8.5 2.707V11.5a.5.5 0 0 1-1 0V2.707L5.354 4.854a.5.5 0 1 1-.708-.708l3-3z"/>
                                            </svg>
                                            <span class="text-16 fw-500">Select Images</span>
                                        </div>
                                    </label>
                                </div>
                                
                                <div id="imageCountContainer" class="col-12 d-none">
                                    <div class="py-10 px-15 bg-blue-1-05 rounded-8 text-blue-1 fw-500">
                                        <span>No file selected</span>
                                    </div>
                                </div>
                            </div>
                            
                            <!-- Image Previews Container -->
                            <div id="previewsContainer" class="row mt-25 px-10 g-20"></div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    
    <!-- Submit Section -->
    <div class="row y-gap-20 mb-30">
        <div class="col-12">
            <div class="py-30 px-30 rounded-12 bg-white shadow-3 border-light fade-in">
                <div class="row">
                    <div class="col-12">
                        <div class="d-flex flex-column justify-center items-center">
                            <button type="submit" id="submitActivityBtn" class="button h-60 px-50 -dark-1 bg-blue-1 text-white rounded-8 shadow-1">
                                <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" fill="currentColor" class="mr-15" viewBox="0 0 16 16">
                                    <path d="M10.97 4.97a.75.75 0 0 1 1.07 1.05l-3.99 4.99a.75.75 0 0 1-1.08.02L4.324 8.384a.75.75 0 1 1 1.06-1.06l2.094 2.093 3.473-4.425a.267.267 0 0 1 .02-.022z"/>
                                </svg>
                                <span class="fw-500 text-16">Update Activity</span>
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    
    {{ form_end(form) }}
</div>
{% endblock %}

{% block javascripts %}
{{ parent() }}
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script src="https://cdn.jsdelivr.net/npm/mapbox-gl@2.14.1/dist/mapbox-gl.js"></script>
<link href="https://cdn.jsdelivr.net/npm/mapbox-gl@2.14.1/dist/mapbox-gl.css" rel="stylesheet" />

<script>
    document.addEventListener('DOMContentLoaded', function() {
        // Activity validation errors highlighting
        const invalidFields = document.querySelectorAll('.is-invalid');
        invalidFields.forEach(field => {
            const parentFormGroup = field.closest('.form-group');
            if (parentFormGroup) {
                parentFormGroup.classList.add('has-error');
            }
        });

        // File Input functionality
        const fileInput = document.getElementById('activity_images');
        const previewsContainer = document.getElementById('previewsContainer');
        const imageCountContainer = document.getElementById('imageCountContainer');
        
        if (fileInput) {
            fileInput.addEventListener('change', function() {
                // Reset previews container
                previewsContainer.innerHTML = '';
                
                // Show image count
                if (this.files.length > 0) {
                    imageCountContainer.classList.remove('d-none');
                    imageCountContainer.querySelector('span').textContent = `${this.files.length} file(s) selected`;
                } else {
                    imageCountContainer.classList.add('d-none');
                }
                
                // Create previews
                for (let i = 0; i < this.files.length; i++) {
                    const file = this.files[i];
                    const reader = new FileReader();
                    
                    reader.onload = function(e) {
                        const preview = document.createElement('div');
                        preview.className = 'col-lg-3 col-md-4 col-sm-6';
                        preview.innerHTML = `
                            <div class="border rounded-8 p-15 h-100 d-flex flex-column shadow-sm">
                                <img src="${e.target.result}" class="w-100 rounded-4" style="height: 180px; object-fit: cover;">
                                <div class="text-14 mt-15 fw-500 text-truncate">${file.name}</div>
                                <div class="text-12 text-light-1 mb-5">${(file.size / 1024).toFixed(2)} KB</div>
                            </div>
                        `;
                        previewsContainer.appendChild(preview);
                    };
                    
                    reader.readAsDataURL(file);
                }
            });
        }

        // Check/uncheck image functionality
        const deleteCheckboxes = document.querySelectorAll('.delete-image-check');
        deleteCheckboxes.forEach(checkbox => {
            const deletionIndicator = checkbox.closest('.position-relative')?.querySelector('.deletion-indicator');
            
            checkbox.addEventListener('change', function() {
                const imageCard = this.closest('.position-relative');
                if (this.checked) {
                    if (imageCard) imageCard.classList.add('border-red-1');
                    if (deletionIndicator) deletionIndicator.style.display = 'block';
                } else {
                    if (imageCard) imageCard.classList.remove('border-red-1');
                    if (deletionIndicator) deletionIndicator.style.display = 'none';
                }
            });
        });

        // Location preview
        const latInput = document.getElementById('activity_lat');
        const lngInput = document.getElementById('activity_lng');
        const mapPreview = document.getElementById('map-preview');

        function displayMapPreview() {
            const lat = parseFloat(latInput.value);
            const lng = parseFloat(lngInput.value);

            if (!isNaN(lat) && !isNaN(lng) && -90 <= lat && lat <= 90 && -180 <= lng && lng <= 180) {
                mapPreview.style.display = 'block';
                mapboxgl.accessToken = 'pk.eyJ1IjoibWFwYm94IiwiYSI6ImNpejY4M29iazA2Z2gycXA4N2pmbDZmangifQ.-g_vE53SD2WrJ6tFX7QHmA';
                const map = new mapboxgl.Map({
                    container: 'map-preview',
                    style: 'mapbox://styles/mapbox/streets-v11',
                    center: [lng, lat],
                    zoom: 12
                });

                // Add a marker at the selected coordinates
                new mapboxgl.Marker()
                    .setLngLat([lng, lat])
                    .addTo(map);
            } else {
                mapPreview.style.display = 'none';
            }
        }

        // Check if we have lat/lng values on page load
        if (latInput && lngInput && latInput.value && lngInput.value) {
            displayMapPreview();
        }

        // Update map preview when coordinates change
        if (latInput && lngInput) {
            latInput.addEventListener('change', displayMapPreview);
            lngInput.addEventListener('change', displayMapPreview);
        }

        // Form validation
        const activityForm = document.getElementById('activity-form');
        if (activityForm) {
            activityForm.addEventListener('submit', function(e) {
                let isValid = true;
                const requiredFields = activityForm.querySelectorAll('[required]');
                
                requiredFields.forEach(field => {
                    if (!field.value.trim()) {
                        isValid = false;
                        const formGroup = field.closest('.form-group');
                        if (formGroup) {
                            formGroup.classList.add('has-error');
                            const errorDiv = formGroup.querySelector('.text-red-1') || document.createElement('div');
                            errorDiv.className = 'text-red-1 mt-5';
                            errorDiv.textContent = 'This field is required';
                            
                            if (!formGroup.querySelector('.text-red-1')) {
                                formGroup.appendChild(errorDiv);
                            }
                        }
                    } else {
                        const formGroup = field.closest('.form-group');
                        if (formGroup) {
                            formGroup.classList.remove('has-error');
                            const errorDiv = formGroup.querySelector('.text-red-1:not(.d-none)');
                            if (errorDiv && !errorDiv.classList.contains('d-none')) {
                                errorDiv.textContent = '';
                            }
                        }
                    }
                });
                
                // Check coordinates
                const lat = parseFloat(latInput.value);
                const lng = parseFloat(lngInput.value);
                if (isNaN(lat) || isNaN(lng) || lat < -90 || lat > 90 || lng < -180 || lng > 180) {
                    isValid = false;
                    Swal.fire({
                        title: 'Invalid Coordinates',
                        text: 'Please enter valid latitude (-90 to 90) and longitude (-180 to 180) values.',
                        icon: 'error',
                        confirmButtonText: 'OK',
                        confirmButtonColor: '#3554D1'
                    });
                }
                
                if (!isValid) {
                    e.preventDefault();
                    // Scroll to first error
                    const firstError = activityForm.querySelector('.has-error');
                    if (firstError) {
                        firstError.scrollIntoView({ behavior: 'smooth', block: 'center' });
                    }
                } else {
                    // Show loading state
                    const submitBtn = activityForm.querySelector('#submitActivityBtn');
                    if (submitBtn) {
                        submitBtn.disabled = true;
                        submitBtn.innerHTML = '<div class="spinner-border spinner-border-sm text-white" role="status"></div> Updating...';
                    }
                }
            });
        }
        
        // Fade in all sections with the fade-in class
        const fadeElements = document.querySelectorAll('.fade-in');
        fadeElements.forEach(el => {
            el.style.opacity = '0';
            el.style.transition = 'opacity 0.3s ease-in-out';
            setTimeout(() => {
                el.style.opacity = '1';
            }, 100);
        });
    });
</script>

<style>
    .input-icon-wrap {
        position: absolute;
        left: 15px;
        top: 50%;
        transform: translateY(-50%);
        z-index: 5;
    }
    
    .input-border-focus:focus {
        border-color: #3554D1 !important;
        box-shadow: 0 0 0 0.2rem rgba(53, 84, 209, 0.25);
    }
    
    .has-error .form-control,
    .has-error .form-select {
        border-color: #d94747 !important;
    }
    
    .hover-shadow-blue:hover {
        box-shadow: 0 10px 20px rgba(53, 84, 209, 0.15);
        transition: box-shadow 0.3s ease;
    }
    
    .border-red-1 {
        border-color: #d94747 !important;
        background-color: rgba(217, 71, 71, 0.05);
    }
    
    /* Card styling */
    .card {
        transition: all 0.3s ease;
    }
    
    .card:hover {
        box-shadow: 0 15px 30px rgba(0, 0, 0, 0.08);
        transform: translateY(-5px);
    }
    
    .card-header.bg-blue-1 {
        border-top-left-radius: 8px;
        border-top-right-radius: 8px;
    }
    
    /* Button styling */
    .hover-shadow-dark:hover {
        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
    }
    
    #submitActivityBtn {
        transition: all 0.3s ease;
    }
    
    #submitActivityBtn:hover {
        transform: translateY(-3px);
        box-shadow: 0 10px 30px rgba(53, 84, 209, 0.15);
    }
    
    /* Form elements */
    .form-group {
        margin-bottom: 5px;
    }
    
    .form-control, .form-select {
        transition: all 0.2s ease;
        border: 1px solid #e5e7eb;
    }
    
    .form-control:hover, .form-select:hover {
        border-color: var(--color-blue-1);
    }
    
    /* Progress indicator */
    .progress-wrapper {
        display: flex;
        align-items: center;
        justify-content: center;
        margin-bottom: 20px;
    }
    
    .progress-item {
        display: flex;
        flex-direction: column;
        align-items: center;
        position: relative;
    }
    
    .progress-circle {
        width: 36px;
        height: 36px;
        border-radius: 50%;
        background-color: #f3f4f6;
        color: #9ca3af;
        display: flex;
        align-items: center;
        justify-content: center;
        font-weight: 600;
        margin-bottom: 8px;
        border: 2px solid #e5e7eb;
        transition: all 0.3s ease;
    }
    
    .progress-item.active .progress-circle {
        background-color: var(--color-blue-1);
        color: white;
        border-color: var(--color-blue-1);
    }
    
    .progress-line {
        width: 60px;
        height: 2px;
        background-color: #e5e7eb;
        margin: 0 10px;
        margin-top: -28px;
    }
    
    .progress-line.active {
        background-color: var(--color-blue-1);
    }
    
    .progress-text {
        font-size: 12px;
        color: #6b7280;
        font-weight: 500;
    }
    
    .progress-item.active .progress-text {
        color: var(--color-blue-1);
        font-weight: 600;
    }
    
    /* Image previews */
    #previewsContainer img {
        transition: all 0.3s ease;
    }
    
    #previewsContainer img:hover {
        transform: scale(1.05);
    }
    
    /* Overall page animation */
    .fade-in {
        animation: fadeInAnimation 0.6s ease forwards;
        opacity: 0;
    }
    
    @keyframes fadeInAnimation {
        from {
            opacity: 0;
            transform: translateY(20px);
        }
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }
    
    /* Responsive handling */
    @media (max-width: 767px) {
        .py-40 {
            padding-top: 25px !important;
            padding-bottom: 25px !important;
        }
        
        .px-40 {
            padding-left: 20px !important;
            padding-right: 20px !important;
        }
    }
</style>
{% endblock %}
