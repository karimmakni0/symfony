{% extends 'AdminBase.html.twig' %}

{% block title %}Manage Users{% endblock %}

{% block stylesheets %}
{{ parent() }}
<link rel="stylesheet" href="{{ asset('assets/css/admin-pagination.css') }}">
<style>
    .action-btn {
        transition: all 0.3s ease;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.15);
    }
    
    .action-btn:hover {
        transform: translateY(-2px);
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
    }
    
    .btn-blue {
        background-color: #0B5ED7 !important; /* Darker blue */
    }
    
    .btn-yellow {
        background-color: #DB9A06 !important; /* Darker yellow */
    }
    
    .btn-red {
        background-color: #D32F2F !important; /* Darker red */
    }
    
    .btn-green {
        background-color: #198754 !important; /* Darker green */
    }
    
    .status-badge {
        font-weight: 500;
        padding: 4px 10px;
        border-radius: 30px;
        display: inline-flex;
        align-items: center;
        justify-content: center;
        min-width: 80px;
    }
    
    .status-badge i {
        margin-right: 4px;
    }
    
    .status-active {
        background-color: #198754;
        color: white;
    }
    
    .status-banned {
        background-color: #D32F2F;
        color: white;
    }
    
    .custom-dropdown-menu {
        display: none;
        position: absolute;
        background-color: #f9f9f9;
        min-width: 160px;
        box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
        z-index: 1;
    }
    
    .custom-dropdown-menu a {
        color: black;
        padding: 12px 16px;
        text-decoration: none;
        display: block;
    }
    
    .custom-dropdown-menu a:hover {background-color: #f1f1f1}
    
    .custom-dropdown:hover .custom-dropdown-menu {
        display: block;
    }
    
    .custom-dropdown:hover .custom-dropdown-button {
        background-color: #3e8e41;
    }
    
    .role-dropdown {
        position: relative;
        display: inline-block;
    }
    
    .role-dropdown-menu {
        display: none;
        position: absolute;
        right: 0;
        background-color: white;
        min-width: 160px;
        box-shadow: 0 8px 16px rgba(0,0,0,0.15);
        z-index: 1000;
        border-radius: 8px;
        padding: 8px;
        margin-top: 5px;
    }
    
    .role-dropdown-menu.show {
        display: block;
    }
    
    .dropdown-header {
        font-weight: 600;
        color: #495057;
        padding: 8px 12px;
        margin-bottom: 4px;
    }
    
    .role-dropdown-item {
        display: block;
        width: 100%;
        padding: 8px 12px;
        clear: both;
        font-weight: 400;
        color: #212529;
        text-align: inherit;
        text-decoration: none;
        white-space: nowrap;
        background-color: transparent;
        border: 0;
        border-radius: 4px;
        transition: background-color 0.2s;
    }
    
    .role-dropdown-item:hover, .role-dropdown-item:focus {
        background-color: #f8f9fa;
        text-decoration: none;
    }
    
    .role-dropdown-item.active {
        background-color: #e9ecef;
    }
    
    .badge {
        display: inline-block;
        padding: 5px 8px;
        font-size: 12px;
        font-weight: 500;
        border-radius: 4px;
    }

    .custom-dropdown-menu {
        display: none;
    }
</style>
{% endblock %}

{% block body %}
<div class="row y-gap-20 justify-between items-end pb-30">
    <div class="col-auto">
        <h1 class="text-30 lh-14 fw-600">Manage Users</h1>
        <div class="text-15 text-light-1">Manage all user accounts in the system</div>
    </div>
    <div class="col-auto">
        <button id="exportUsersBtn" class="button -md h-50 bg-blue-1 text-white">
            <i class="icon-file-text text-15 mr-10"></i>
            Export Users to CSV
        </button>
    </div>
</div>

<!-- Filter Section -->
<div class="py-20 px-30 rounded-4 bg-white shadow-3 mb-30">
    <div class="row justify-between items-center pb-20">
        <div class="col-auto">
            <h3 class="text-16 lh-1 fw-500">Filter Users</h3>
        </div>
        <div class="col-auto">
            <a href="{{ path('admin_users') }}" class="text-14 text-blue-1">
                Clear All Filters
            </a>
        </div>
    </div>
    
    <form action="{{ path('admin_users') }}" method="GET" class="js-filter-form">
        <div class="row y-gap-20 items-center">
            <div class="col-lg-4">
                <div class="search-field">
                    <input type="text" name="search" value="{{ filters.search }}" class="form-control" placeholder="Search by name, last name or email">
                </div>
            </div>
            
            <div class="col-lg-3">
                <div class="select-field">
                    <select name="role" class="form-select js-filter-role">
                        <option value="">All Roles</option>
                        {% for role in roles %}
                            <option value="{{ role }}" {% if filters.role == role %}selected{% endif %}>{{ role }}</option>
                        {% endfor %}
                    </select>
                </div>
            </div>
            
            <div class="col-lg-3">
                <div class="select-field">
                    <select name="status" class="form-select js-filter-status">
                        <option value="">All Statuses</option>
                        <option value="active" {% if filters.status == 'active' %}selected{% endif %}>Active</option>
                        <option value="banned" {% if filters.status == 'banned' %}selected{% endif %}>Banned</option>
                    </select>
                </div>
            </div>
            
            <div class="col-lg-2">
                <button type="submit" class="button -md h-50 w-100 bg-blue-1 text-white">
                    <i class="icon-search text-15 mr-10"></i>
                    Filter
                </button>
            </div>
        </div>
    </form>
</div>

<style>
    .search-field input {
        height: 50px;
        border-radius: 4px;
        border: 1px solid #e9e9e9;
        padding: 0 15px;
        width: 100%;
        transition: all 0.3s;
    }
    .search-field input:focus {
        border-color: #3554d1;
        box-shadow: 0 0 0 2px rgba(53, 84, 209, 0.2);
        outline: none;
    }
    .select-field select {
        height: 50px;
        border-radius: 4px;
        border: 1px solid #e9e9e9;
        padding: 0 15px;
        width: 100%;
        transition: all 0.3s;
        background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'%3e%3cpath fill='none' stroke='%23343a40' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M2 5l6 6 6-6'/%3e%3c/svg%3e");
        background-repeat: no-repeat;
        background-position: right 0.75rem center;
        background-size: 16px 12px;
        appearance: none;
    }
    .select-field select:focus {
        border-color: #3554d1;
        box-shadow: 0 0 0 2px rgba(53, 84, 209, 0.2);
        outline: none;
    }
</style>

<div class="py-30 px-30 rounded-4 bg-white shadow-3">
    <div class="tabs -underline-2 js-tabs">
        <div class="tabs__controls row x-gap-40 y-gap-10 lg:x-gap-20 js-tabs-controls">
            <div class="col-auto">
                <button class="tabs__button text-18 lg:text-16 text-light-1 fw-500 pb-5 lg:pb-0 js-tabs-button is-tab-el-active" data-tab-target=".-tab-item-1">{% if filters.search or filters.role or filters.status %}Filtered{% else %}All{% endif %} Users ({{ users|length }})</button>
            </div>
        </div>

        <div class="tabs__content pt-30 js-tabs-content">
            <div class="tabs__pane -tab-item-1 is-tab-el-active">
                <div class="overflow-scroll scroll-bar-1">
                    <table class="table-4 -border-bottom col-12">
                        <thead class="bg-light-2">
                            <tr>
                                <th>ID</th>
                                <th>Profile</th>
                                <th>Email</th>
                                <th>Full Name</th>
                                <th>Role</th>
                                <th>Status</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            {% if users is empty %}
                                <tr>
                                    <td colspan="7" class="text-center">No users found</td>
                                </tr>
                            {% else %}
                                {% for user in users %}
                                    <tr>
                                        <td>#{{ user.id }}</td>
                                        <td>
                                            <div class="size-60">
                                                {% if user.image %}
                                                    <img src="{{ asset(user.image) }}" alt="{{ user.name }} {{ user.lastname }}" class="size-60 rounded-full object-cover">
                                                {% else %}
                                                    <div class="size-60 rounded-full flex-center bg-blue-1-05 text-blue-1">
                                                        <i class="icon-user text-24"></i>
                                                    </div>
                                                {% endif %}
                                            </div>
                                        </td>
                                        <td>{{ user.email }}</td>
                                        <td>{{ user.name }} {{ user.lastname }}</td>
                                        <td>
                                            <div class="rounded-100 py-4 px-10 text-center {% if user.role == 'Admin' %}bg-blue-1-05 text-blue-1{% elseif user.role == 'Publicitaire' %}bg-yellow-4 text-yellow-3{% else %}bg-green-1 text-green-2{% endif %}">
                                                {{ user.role }}
                                            </div>
                                        </td>
                                        <td>
                                            {% if user.isBanned %}
                                                <div class="status-badge status-banned">
                                                    <i class="icon-close text-10"></i> Banned
                                                </div>
                                            {% else %}
                                                <div class="status-badge status-active">
                                                    <i class="icon-check text-10"></i> Active
                                                </div>
                                            {% endif %}
                                        </td>
                                        <td>
                                            <div class="row x-gap-10 y-gap-10">
                                                {% if user.isBanned %}
                                                    <div class="col-auto">
                                                        <a href="javascript:void(0);" 
                                                           onclick="confirmUnban('{{ user.id }}', '{{ user.name }}', '{{ user.lastname }}', '{{ path('admin_unban_user', {'id': user.id}) }}')" 
                                                           class="action-btn flex-center size-35 rounded-4 btn-blue text-white" title="Unban User">
                                                            <i class="icon-check text-12"></i>
                                                        </a>
                                                    </div>
                                                {% else %}
                                                    <div class="col-auto">
                                                        <a href="javascript:void(0);" 
                                                           onclick="confirmBan('{{ user.id }}', '{{ user.name }}', '{{ user.lastname }}', '{{ path('admin_ban_user', {'id': user.id}) }}')" 
                                                           class="action-btn flex-center size-35 rounded-4 btn-yellow text-white" title="Ban User">
                                                            <i class="icon-close text-12"></i>
                                                        </a>
                                                    </div>
                                                {% endif %}
                                                
                                                <!-- Role selection -->
                                                <div class="col-auto">
                                                    <a href="javascript:void(0);" 
                                                       onclick="showRoleSelection('{{ user.id }}', '{{ user.name }}', '{{ user.lastname }}', '{{ user.role }}')" 
                                                       class="action-btn flex-center size-35 rounded-4 btn-green text-white" 
                                                       title="Change Role">
                                                        <i class="icon-star text-12"></i>
                                                    </a>
                                                </div>
                                                

                                            </div>
                                        </td>
                                    </tr>
                                {% endfor %}
                            {% endif %}
                        </tbody>
                    </table>
                    
                    {# Pagination #}
                    {% if totalPages > 1 %}
                        <div class="pagination-container">
                            {% include 'admin/components/pagination.html.twig' with {
                                currentPage: currentPage,
                                totalPages: totalPages,
                                routeName: 'admin_users',
                                queryParams: app.request.query.all|merge({page: null})
                            } %}
                        </div>
                    {% endif %}
                </div>
            </div>
        </div>
    </div>
</div>
{% endblock %}

{% block javascripts %}
{{ parent() }}
<script>
    document.addEventListener('DOMContentLoaded', function() {
        // Auto-submit form when selects change
        document.querySelectorAll('.js-filter-role, .js-filter-status').forEach(select => {
            select.addEventListener('change', function() {
                document.querySelector('.js-filter-form').submit();
            });
        });
        
        // No need for dropdown toggles anymore as we're using SweetAlert
        
        // Add tooltips to action buttons
        const actionButtons = document.querySelectorAll('.action-btn');
        if (typeof bootstrap !== 'undefined' && bootstrap.Tooltip) {
            actionButtons.forEach(button => {
                new bootstrap.Tooltip(button);
            });
        }
    });
    
    // SweetAlert functions for user management
    function showRoleSelection(userId, firstName, lastName, currentRole) {
        Swal.fire({
            title: 'Change User Role',
            html: `<p>Select a new role for <strong>${firstName} ${lastName}</strong></p>
                  <div class="role-selection mt-3">
                    <div class="role-option mb-2 p-2 ${currentRole === 'Admin' ? 'selected' : ''}" 
                         onclick="selectRole(this, 'Admin')">
                      <span class="badge bg-blue-1">Admin</span>
                      <small class="d-block mt-1">Full access to all system features</small>
                    </div>
                    <div class="role-option mb-2 p-2 ${currentRole === 'Publicitaire' ? 'selected' : ''}" 
                         onclick="selectRole(this, 'Publicitaire')">
                      <span class="badge bg-yellow-4">Publicitaire</span>
                      <small class="d-block mt-1">Can manage promotional content</small>
                    </div>
                    <div class="role-option mb-2 p-2 ${currentRole === 'user' ? 'selected' : ''}" 
                         onclick="selectRole(this, 'user')">
                      <span class="badge bg-green-1">User</span>
                      <small class="d-block mt-1">Standard user privileges</small>
                    </div>
                  </div>`,
            showCancelButton: true,
            confirmButtonText: 'Update Role',
            cancelButtonText: 'Cancel',
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            didOpen: () => {
                // Add styles to the role selection options
                const style = document.createElement('style');
                style.innerHTML = `
                    .role-option {
                        border: 1px solid #e9e9e9;
                        border-radius: 8px;
                        cursor: pointer;
                        transition: all 0.2s;
                    }
                    .role-option:hover {
                        background-color: #f8f9fa;
                    }
                    .role-option.selected {
                        background-color: #e7f1ff;
                        border-color: #3085d6;
                    }
                    .badge {
                        display: inline-block;
                        padding: 5px 10px;
                        font-size: 13px;
                        font-weight: 500;
                        border-radius: 4px;
                    }
                    .bg-blue-1 {
                        background-color: #0B5ED7 !important;
                        color: white;
                    }
                    .bg-yellow-4 {
                        background-color: #DB9A06 !important;
                        color: white;
                    }
                    .bg-green-1 {
                        background-color: #198754 !important;
                        color: white;
                    }
                `;
                document.head.appendChild(style);
                
                // Handle initial selection
                window.selectedRole = currentRole;
            },
            preConfirm: () => {
                return window.selectedRole;
            }
        }).then((result) => {
            if (result.isConfirmed && result.value) {
                const newRole = result.value;
                if (newRole !== currentRole) {
                    const url = `{{ path('admin_change_role_user', {'id': 'USER_ID', 'role': 'ROLE'}) }}`
                        .replace('USER_ID', userId)
                        .replace('ROLE', newRole);
                    window.location.href = url;
                }
            }
        });
    }
    
    // Helper function to handle role selection in the SweetAlert dialog
    function selectRole(element, roleName) {
        // Remove selected class from all options
        document.querySelectorAll('.role-option').forEach(el => {
            el.classList.remove('selected');
        });
        
        // Add selected class to the clicked option
        element.classList.add('selected');
        
        // Store the selected role
        window.selectedRole = roleName;
    }
    
    function confirmBan(userId, firstName, lastName, url) {
        Swal.fire({
            title: 'Ban User?',
            html: `Are you sure you want to ban <strong>${firstName} ${lastName}</strong>? They will not be able to log in.`,
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, ban user',
            cancelButtonText: 'Cancel'
        }).then((result) => {
            if (result.isConfirmed) {
                window.location.href = url;
            }
        });
    }
    
    function confirmUnban(userId, firstName, lastName, url) {
        Swal.fire({
            title: 'Unban User?',
            html: `Are you sure you want to unban <strong>${firstName} ${lastName}</strong>?`,
            icon: 'question',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, unban user',
            cancelButtonText: 'Cancel'
        }).then((result) => {
            if (result.isConfirmed) {
                window.location.href = url;
            }
        });
    }
    
    function confirmChangeRole(url) {
        Swal.fire({
            title: 'Are you sure?',
            text: "You are about to change this user's role!",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3554D1',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, change it!'
        }).then((result) => {
            if (result.isConfirmed) {
                window.location.href = url;
            }
        });
    }
    
    // Handle export users button click
    document.getElementById('exportUsersBtn').addEventListener('click', function() {
        // Show confirmation dialog
        Swal.fire({
            title: 'Export Users to CSV',
            text: 'The CSV file will be sent to your admin email for security reasons rather than being downloaded directly.',
            icon: 'info',
            showCancelButton: true,
            confirmButtonColor: '#3554D1',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, export it!'
        }).then((result) => {
            if (result.isConfirmed) {
                // Show loading state
                Swal.fire({
                    title: 'Processing...',
                    text: 'Exporting users and sending email...',
                    allowOutsideClick: false,
                    didOpen: () => {
                        Swal.showLoading();
                    }
                });
                
                // Send export request
                fetch('{{ path("admin_export_users_csv") }}')
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            Swal.fire({
                                title: 'Success!',
                                text: data.message,
                                icon: 'success',
                                confirmButtonColor: '#3554D1'
                            });
                        } else {
                            Swal.fire({
                                title: 'Error!',
                                text: data.message,
                                icon: 'error',
                                confirmButtonColor: '#3554D1'
                            });
                        }
                    })
                    .catch(error => {
                        console.error('Error:', error);
                        Swal.fire({
                            title: 'Error!',
                            text: 'There was a problem exporting the users data.',
                            icon: 'error',
                            confirmButtonColor: '#3554D1'
                        });
                    });
            }
        });
    });
</script>
{% endblock %}
